version: '3'
services:
  database:
    build:
      context: ./database
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - db_init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data

  server:
    build:
      context: ./server
    ports:
      - "5555:5555"
    networks:
      - backend
    depends_on:
      - database

  client:
    build:
      context: ./client
    ports:
      - "80:80"
    networks:
      - backend
    depends_on:
      - server
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=80"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
    depends_on:
      - prometheus
    networks:
      - backend

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    ports:
      - "9113:9113"
    command: ["--nginx.scrape-uri=http://client/metrics"]
    networks:
      - backend

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://admin:top_secret_password@database:5432/comp0022?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - backend

networks:
  backend:

volumes:
  db_init:
  db_data: